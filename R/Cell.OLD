#' @include genericMarker.R
#' @include genericShape.R
#' 
#' 
#' @export
cellPrototype<-methods::setClass(Class = 'cellPrototype',
                                 slots = c(name = 'character',
                                           cytoplasm = 'genericShape_NULL',
                                           nucleus = 'genericShape_NULL',
                                           organelle = 'genericShape_NULL',
                                           markers = 'list'),
                                 prototype = list( name = 'aNameForThisCell',
                                                   cytoplasm = NULL,
                                                   nucleus = NULL,
                                                   organelle = NULL,
                                                   markers = list()))

methods::setMethod(f = 'names',
                   signature = 'cellPrototype',
                   definition = function(x){
                     slot(x,'name')
                   })

methods::setMethod(f = 'names<-',
                   signature = 'cellPrototype',
                   definition = function(x,value){
                     slot(x,'name')<-value
                   })


#' @export
cell<-methods::setClass(Class = 'cell',
                        slots = c(name = 'character',
                                  cytoplasm = 'list',
                                  nucleus = 'list',
                                  organelle = 'list',
                                  markers = 'list'),
                        prototype = list( name = 'aNameForThisCell',
                                          cytoplasm = list(),
                                          nucleus = list(),
                                          organelle = list(),
                                          markers = list()))

methods::setMethod(f = 'names',
                   signature = 'cell',
                   definition = function(x){
                     slot(x,'name')
                   })

methods::setMethod(f = 'names<-',
                   signature = 'cell',
                   definition = function(x,value){
                     slot(x,'name')<-value
                   })


methods::setMethod(f = 'bh_create',
                   signature = 'cellPrototype',
                   definition = function(x,
                                         lox,
                                         loy,
                                         ...){
                     # browser()
                     if (!is.null(x@cytoplasm)) {
                       cytoplasm<-bh_create(x@cytoplasm)
                       cytoplasm$stem<-cytoplasm$stem+c(lox,loy)
                       cytoplasm$branch<-lapply(cytoplasm$branch,'+',c(lox,loy))
                       cytoplasm$outline<-cytoplasm$outline+c(lox,loy)
                     } else cytoplasm<-list()
                     
                     if (!is.null(x@nucleus)) {
                       nucleus<-bh_create(x@nucleus)
                       nucleus$stem<-nucleus$stem+c(lox,loy)
                       nucleus$branch<-lapply(nucleus$branch,'+',c(lox,loy))
                       nucleus$outline<-nucleus$outline+c(lox,loy)
                     } else nucleus<-list()
                     
                     if (!is.null(x@organelle)) {
                       organelle<-bh_create(x@organelle)
                       organelle$stem<-organelle$stem+c(lox,loy)
                       organelle$branch<-lapply(organelle$branch,'+',c(lox,loy))
                       organelle$outline<-organelle$outline+c(lox,loy)
                     } else organelle<-list()
                     
                     
                     newCell<-new('cell',
                                  name = x@name,
                                  cytoplasm = cytoplasm,
                                  nucleus = nucleus,
                                  organelle = organelle,
                                  markers = x@markers)
                     
                   })

#' Define a new cell
#' 
#' helper function to create a new cell prototype.
#' @param cytoplasm genericShape.
#' @param nucleus genericShape.
#' @param organelle genericSape. (not implemented yet)
#' @param markers list, makers.
#' @return An object of class cellPrototype
#' @export
bh_defineCell<-function(name = NULL,
                        cytoplasm = NULL,
                        nucleus = NULL,
                        organelle = NULL,
                        markers = NULL){
  
  if (is.null(cytoplasm)) stop('provide a name for this cell')
  if (is.null(cytoplasm)) stop('a cell needs at least a cytoplasm')
  if (is.null(markers)) stop('give some markers')
  if (!is.list(markers)) stop('wrap markers in a list')
  
  new('cellPrototype',
      name = name,
      cytoplasm = cytoplasm,
      nucleus = nucleus,
      organelle = organelle,
      markers = markers)
}
